import React, { useEffect, useState, useContext } from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import NewFooter from "./NewFooter";
import NewSidebar from "./NewSidebar";
import { AuthContext } from "./AuthContext";
import Navbar from "./Navbar";
import "./vulnerabilitytable.css";
import { useNavigate } from "react-router-dom";

function VulnerabilityData() {
  const [projectsExist, setProjectsExist] = useState(false);
  const [vulnerabilityTable, setVulnerabilityTable] = useState([]);
  const { email } = useContext(AuthContext);
  const navigate = useNavigate();

  useEffect(() => {
    if (!email) {
      navigate('/');
      return;
    }

    const fetchVulnerabilities = async () => {
      try {
        const response = await fetch(`http://localhost:8000/get-vulnerabilities?email=${email}`);
        const data = await response.json();
        
        if (data.data.length > 0) {
          setProjectsExist(true);
          // Map your MongoDB fields to match your UI
          const formattedData = data.data.map(item => ({
            id: item.id || "N/A",
            package: item.vulnerability || "N/A",
            severity: item.description || "N/A",
            date: item.severity || "N/A"
          }));
          setVulnerabilityTable(formattedData);
        } else {
          setProjectsExist(false);
        }
      } catch (error) {
        console.error("❌ Error fetching vulnerabilities:", error);
      }
    };

    fetchVulnerabilities();
  }, [email, navigate]);

  const getSeverityClass = (severity) => {
    switch (severity) {
      case "Critical":
        return "text-danger fw-bold";
      case "High":
        return "text-warning fw-bold";
      case "Medium":
        return "text-primary";
      default:
        return "text-muted";
    }
  };

  return (
    <>
      <NewSidebar activePage="vulnerability" />
      <Navbar />
      <main
        className="main-content"
        style={{
          marginLeft: "250px",
          paddingTop: "70px",
          backgroundColor: "#ffffff",
          minHeight: "100vh",
        }}
      >
        <div className="container-fluid py-4">
          <div className="vulnerability-wrapper">
            <div className="card shadow-sm p-4 rounded">
              <h4 className="fw-bold mb-4">📊 Vulnerabilities</h4>
              <div className="table-responsive">
                <table className="table table-bordered table-striped">
                  <thead className="table-dark">
                    <tr>
                      <th>ID</th>
                      <th>Vulnerability</th>
                      <th>Description</th>
                      <th>Severity</th>
                    </tr>
                  </thead>
                  <tbody>
                    {projectsExist &&
                      vulnerabilityTable.map((item, index) => (
                        <tr key={index}>
                          <td>{item.id}</td>
                          <td>{item.package}</td>
                          <td className={getSeverityClass(item.severity)}>{item.severity}</td>
                          <td>{item.date}</td>
                        </tr>
                      ))}
                  </tbody>
                </table>
                {!projectsExist && (
                  <p className="text-muted">No vulnerabilities to display.</p>
                )}
              </div>
            </div>
          </div>
        </div>
        <NewFooter />
      </main>
    </>
  );
}

export default VulnerabilityData;
